---
- name: remove default corosync.conf if present
  block:
    - name: check if corosync.conf exists
      stat:
        path: /etc/corosync/corosync.conf
      register: corosync_file

    - name: Read the first line of corosync.conf
      command: "head -n 1 /etc/corosync/corosync.conf"
      register: first_line
      changed_when: false
      ignore_errors: true
      when: corosync_file.stat.exists

    - name: Remove corosync.conf if the first line matches
      file:
        path: /etc/corosync/corosync.conf
        state: absent
      when: corosync_file.stat.exists and first_line.stdout == "# Please read the corosync.conf.5 manual page"

- name: Enable and start PCS daemon
  service:
    name: pcsd
    enabled: true
    state: started

- name: Enable corosync/pacemaker daemon
  service:
    name: "{{ item }}"
    enabled: true
    state: stopped
  loop:
    - corosync
    - pacemaker

- name: Generate a password for the user {{ pcs_user }}
  set_fact:
    pcs_password: "{{ ansible_machine_id | to_uuid }}"
  run_once: true
  when: pcs_password is not defined

- name: Set user {{ pcs_user }} password
  user:
    name: "{{ pcs_user }}"
    password: "{{ pcs_password | password_hash('sha512') }}"

- name: resolve hostnames
  set_fact: iscsi_host_ips="{{ iscsi_host_ips|default([]) + [ lookup('ip', '{{ item }}') ] }}"
  loop: "{{ ansible_play_batch }}"
  run_once: true

- name: Authenticate all nodes
  command: pcs host auth {{ iscsi_host_ips | join(' ') }} -u "{{ pcs_user }}" -p "{{ pcs_password | quote }}"
  run_once: true
  args:
    creates: /var/lib/pcsd/tokens

- name: Setup message bus
  run_once: true
  command: pcs cluster setup {{ pcs_cluster_name | quote }} {{  iscsi_host_ips | join(' ') }}
  args:
    creates: /etc/corosync/corosync.conf

- name: Start the cluster
  command: pcs cluster start --all
  run_once: true

- name: Enable the cluster to start at boot time
  command: pcs cluster enable --all
  run_once: true

- name: Create iSCSI resource agent files
  copy:
    src: "{{ item }}"
    dest: "/usr/lib/ocf/resource.d/heartbeat/{{ item }}"
    owner: "root"
    group: "root"
    mode: 0755
  with_items:
    - iSCSITarget
    - iSCSILogicalUnit
